<?xml version="1.0" encoding="UTF-8"?>

<!-- Copyright 2005-2007 Open Source Applications Foundation Licensed under 
	the Apache License, Version 2.0 (the "License"); you may not use this file 
	except in compliance with the License. You may obtain a copy of the License 
	at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable 
	law or agreed to in writing, software distributed under the License is distributed 
	on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either 
	express or implied. See the License for the specific language governing permissions 
	and limitations under the License. -->

<!-- Security configuration for WebDAV -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd">

	<bean id="protocolAuthenticationEntryPoint" class="org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint">
        <property name="realmName" value="#{T(org.unitedinternet.cosmo.CosmoConstants).PRODUCT_NAME}" />
    </bean>

	<bean id="protocolBasicProcessingFilter"
		class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
		<constructor-arg ref="authenticationManager" />
		<constructor-arg ref="protocolAuthenticationEntryPoint" />
	</bean>

	<!-- morse code AccessDecisionManager that verifies user paths -->
	<bean id="davAccessDecisionManager" class="org.unitedinternet.cosmo.dav.acegisecurity.DavAccessDecisionManager">
		<constructor-arg index="0" ref="userService" />
		<constructor-arg index="1">
            <bean class="org.unitedinternet.cosmo.dav.acegisecurity.UserPrincipalEvaluator" />
        </constructor-arg>
        <constructor-arg index="2">
            <bean class="org.unitedinternet.cosmo.dav.acegisecurity.UserPrincipalCollectionEvaluator" />
        </constructor-arg>
	</bean>

	<bean id="davExceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<constructor-arg ref="protocolAuthenticationEntryPoint" />
		<property name="accessDeniedHandler">
			<bean
				class="org.unitedinternet.cosmo.dav.acegisecurity.DavAccessDeniedHandler" />
		</property>
	</bean>

	<!-- interceptor which performs authorization for DAV requests -->

	<bean id="davFilterInvocationInterceptor"
		class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<property name="authenticationManager">
			<ref bean="authenticationManager" />
		</property>
		<property name="accessDecisionManager">
			<ref bean="davAccessDecisionManager" />
		</property>
		<property name="securityMetadataSource">
			<security:filter-security-metadata-source>
				<security:intercept-url pattern="/**"
					 access="ROLE_WE_DONT_HAVE"/>
			</security:filter-security-metadata-source>
		</property>
	</bean>

	<!-- filter chain that kicks off request-time processing -->

	<bean id="springSecurityFilterChain" class="org.springframework.security.web.FilterChainProxy">
		<security:filter-chain-map request-matcher="ant">
			<security:filter-chain pattern="/**"
				filters="requestContextFilter,
				        openSessionInViewFilter,
                        securityContextPersistenceFilter,
				        protocolBasicProcessingFilter,
         				davExceptionTranslationFilter,
         				davFilterInvocationInterceptor,
         				retryFilter" />
		</security:filter-chain-map>
	</bean>

    <bean id="openSessionInViewFilter" class="org.springframework.orm.hibernate4.support.OpenSessionInViewFilter" />
    <bean id="requestContextFilter" class="org.springframework.web.filter.RequestContextFilter" />

    <bean id="securityContextPersistenceFilter" class="org.springframework.security.web.context.SecurityContextPersistenceFilter" />

	<!-- Intercepts service calls and verifies current principal has sufficient 
		privileges to execute api. Aspect bean is annotated with aspecj annotations. -->
	<bean id="securityAspect" class="org.unitedinternet.cosmo.security.aop.SecurityAdvice">
		<constructor-arg index="0" ref="securityManager" />
	</bean>

	<!-- authentication manager definition and dependencies -->

	<bean id="daoAuthenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService">
			<ref bean="userDetailsService" />
		</property>
		<property name="passwordEncoder">
			<ref bean="passwordEncoder" />
		</property>
	</bean>
	<bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />

	<bean id="anonymousAuthenticationProvider"
		class="org.springframework.security.authentication.AnonymousAuthenticationProvider">
		<constructor-arg value="badgerbadgerbadger" />
	</bean>

	<bean id="authenticationManager"
		class="org.springframework.security.authentication.ProviderManager">
		<constructor-arg index="0" ref="authenticationProviders"/>
	</bean>
	
	<util:list id="authenticationProviders">
		<ref bean="daoAuthenticationProvider" />
		<ref bean="anonymousAuthenticationProvider" />
	</util:list>
	<!-- security facade resources -->

	<bean id="securityManager" class="org.unitedinternet.cosmo.security.impl.CosmoSecurityManagerImpl">
		<property name="userService">
			<ref bean="userService" />
		</property>
	</bean>

</beans>
